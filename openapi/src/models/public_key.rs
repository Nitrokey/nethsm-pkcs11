/*
 * NetHSM
 *
 * All endpoints expect exactly the specified JSON. Additional properties will cause a Bad Request Error (400). All HTTP errors contain a JSON structure with an explanation of type string. All [base64](https://tools.ietf.org/html/rfc4648#section-4) encoded values are Big Endian.
 *
 * The version of the OpenAPI document: v1
 *
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct PublicKey {
    #[serde(rename = "mechanisms")]
    pub mechanisms: Vec<crate::models::KeyMechanism>,
    #[serde(rename = "type")]
    pub r#type: crate::models::KeyType,
    #[serde(rename = "restrictions")]
    pub restrictions: Box<crate::models::KeyRestrictions>,
    #[serde(rename = "key", deserialize_with = "Option::deserialize")]
    pub key: Option<Box<crate::models::KeyPublicData>>,
    #[serde(rename = "operations")]
    pub operations: i32,
}

impl PublicKey {
    pub fn new(
        mechanisms: Vec<crate::models::KeyMechanism>,
        r#type: crate::models::KeyType,
        restrictions: crate::models::KeyRestrictions,
        key: Option<crate::models::KeyPublicData>,
        operations: i32,
    ) -> PublicKey {
        PublicKey {
            mechanisms,
            r#type,
            restrictions: Box::new(restrictions),
            key: if let Some(x) = key {
                Some(Box::new(x))
            } else {
                None
            },
            operations,
        }
    }
}
